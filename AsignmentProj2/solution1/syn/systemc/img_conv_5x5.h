// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _img_conv_5x5_HH_
#define _img_conv_5x5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolve_mac_mulabkb.h"
#include "convolve_mac_mulacud.h"

namespace ap_rtl {

struct img_conv_5x5 : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > inptr_address0;
    sc_out< sc_logic > inptr_ce0;
    sc_in< sc_lv<8> > inptr_q0;
    sc_out< sc_lv<11> > inptr_address1;
    sc_out< sc_logic > inptr_ce1;
    sc_in< sc_lv<8> > inptr_q1;
    sc_out< sc_lv<6> > outptr_address0;
    sc_out< sc_logic > outptr_ce0;
    sc_out< sc_logic > outptr_we0;
    sc_out< sc_lv<8> > outptr_d0;
    sc_out< sc_lv<5> > mask_address0;
    sc_out< sc_logic > mask_ce0;
    sc_in< sc_lv<8> > mask_q0;
    sc_out< sc_lv<5> > mask_address1;
    sc_out< sc_logic > mask_ce1;
    sc_in< sc_lv<8> > mask_q1;
    sc_in< sc_lv<5> > y;


    // Module declarations
    img_conv_5x5(sc_module_name name);
    SC_HAS_PROCESS(img_conv_5x5);

    ~img_conv_5x5();

    sc_trace_file* mVcdFile;

    convolve_mac_mulabkb<1,1,8,8,16,17>* convolve_mac_mulabkb_U1;
    convolve_mac_mulacud<1,1,8,8,17,18>* convolve_mac_mulacud_U2;
    convolve_mac_mulabkb<1,1,8,8,16,17>* convolve_mac_mulabkb_U3;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > reg_220;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > reg_224;
    sc_signal< sc_lv<11> > IN4_0_rec_cast1_fu_228_p1;
    sc_signal< sc_lv<11> > IN4_0_rec_cast1_reg_581;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > outptr_addr_reg_586;
    sc_signal< sc_lv<6> > p_rec_fu_243_p2;
    sc_signal< sc_lv<6> > p_rec_reg_594;
    sc_signal< sc_lv<5> > i_cast1_fu_249_p1;
    sc_signal< sc_lv<5> > i_cast1_reg_599;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_cast_fu_253_p1;
    sc_signal< sc_lv<4> > i_cast_reg_605;
    sc_signal< sc_lv<3> > i_1_fu_263_p2;
    sc_signal< sc_lv<3> > i_1_reg_614;
    sc_signal< sc_lv<1> > exitcond_fu_257_p2;
    sc_signal< sc_lv<11> > tmp4_fu_338_p3;
    sc_signal< sc_lv<11> > tmp4_reg_629;
    sc_signal< sc_lv<7> > tmp_fu_345_p3;
    sc_signal< sc_lv<7> > tmp_reg_635;
    sc_signal< sc_lv<8> > inptr_load_1_reg_660;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > inptr_load_2_reg_665;
    sc_signal< sc_lv<8> > mask_load_1_reg_680;
    sc_signal< sc_lv<8> > mask_load_2_reg_685;
    sc_signal< sc_lv<16> > sum33_fu_502_p2;
    sc_signal< sc_lv<16> > sum33_reg_700;
    sc_signal< sc_lv<17> > grp_fu_550_p3;
    sc_signal< sc_lv<17> > tmp9_reg_705;
    sc_signal< sc_lv<18> > grp_fu_558_p3;
    sc_signal< sc_lv<18> > tmp5_reg_710;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<21> > sum_1_fu_544_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > IN4_0_rec_reg_184;
    sc_signal< sc_lv<21> > sum_reg_196;
    sc_signal< sc_lv<1> > exitcond2_fu_237_p2;
    sc_signal< sc_lv<3> > i_reg_208;
    sc_signal< sc_lv<64> > IN4_0_rec_cast_fu_232_p1;
    sc_signal< sc_lv<64> > sum1_cast_fu_288_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_269_p1;
    sc_signal< sc_lv<64> > sum3_cast_fu_363_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_386_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_396_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_406_p1;
    sc_signal< sc_lv<64> > sum7_cast_fu_423_p1;
    sc_signal< sc_lv<64> > sum9_cast_fu_445_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_455_p1;
    sc_signal< sc_lv<64> > tmp_12_fu_465_p1;
    sc_signal< sc_lv<11> > tmp3_fu_274_p4;
    sc_signal< sc_lv<11> > sum1_fu_283_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_293_p3;
    sc_signal< sc_lv<21> > p_s_fu_301_p3;
    sc_signal< sc_lv<13> > tmp_3_fu_309_p4;
    sc_signal< sc_lv<1> > icmp_fu_319_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_325_p1;
    sc_signal< sc_lv<11> > tmp5_cast_fu_353_p1;
    sc_signal< sc_lv<11> > sum3_fu_357_p2;
    sc_signal< sc_lv<8> > tmp1_fu_368_p3;
    sc_signal< sc_lv<11> > tmp7_cast_fu_376_p1;
    sc_signal< sc_lv<11> > sum5_fu_380_p2;
    sc_signal< sc_lv<4> > tmp_7_fu_391_p2;
    sc_signal< sc_lv<4> > tmp_9_fu_401_p2;
    sc_signal< sc_lv<8> > tmp9_cast1_fu_411_p1;
    sc_signal< sc_lv<11> > tmp9_cast_fu_414_p1;
    sc_signal< sc_lv<11> > sum7_fu_418_p2;
    sc_signal< sc_lv<9> > tmp7_fu_428_p3;
    sc_signal< sc_lv<11> > tmp11_cast_fu_436_p1;
    sc_signal< sc_lv<11> > sum9_fu_440_p2;
    sc_signal< sc_lv<5> > tmp_1_fu_450_p2;
    sc_signal< sc_lv<5> > tmp_11_fu_460_p2;
    sc_signal< sc_lv<8> > sum00_fu_478_p0;
    sc_signal< sc_lv<8> > sum00_fu_478_p1;
    sc_signal< sc_lv<16> > sum00_fu_478_p2;
    sc_signal< sc_lv<8> > sum33_fu_502_p0;
    sc_signal< sc_lv<8> > sum33_fu_502_p1;
    sc_signal< sc_lv<17> > grp_fu_566_p3;
    sc_signal< sc_lv<19> > tmp13_cast_fu_531_p1;
    sc_signal< sc_lv<19> > tmp12_cast_fu_528_p1;
    sc_signal< sc_lv<19> > tmp_13_fu_534_p2;
    sc_signal< sc_lv<21> > p_cast_fu_540_p1;
    sc_signal< sc_lv<8> > grp_fu_550_p0;
    sc_signal< sc_lv<8> > grp_fu_558_p0;
    sc_signal< sc_lv<8> > grp_fu_566_p0;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_550_p00;
    sc_signal< sc_lv<16> > grp_fu_558_p00;
    sc_signal< sc_lv<16> > grp_fu_566_p00;
    sc_signal< sc_lv<16> > sum00_fu_478_p00;
    sc_signal< sc_lv<16> > sum33_fu_502_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_14;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN4_0_rec_cast1_fu_228_p1();
    void thread_IN4_0_rec_cast_fu_232_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_237_p2();
    void thread_exitcond_fu_257_p2();
    void thread_grp_fu_550_p0();
    void thread_grp_fu_550_p00();
    void thread_grp_fu_558_p0();
    void thread_grp_fu_558_p00();
    void thread_grp_fu_566_p0();
    void thread_grp_fu_566_p00();
    void thread_i_1_fu_263_p2();
    void thread_i_cast1_fu_249_p1();
    void thread_i_cast_fu_253_p1();
    void thread_icmp_fu_319_p2();
    void thread_inptr_address0();
    void thread_inptr_address1();
    void thread_inptr_ce0();
    void thread_inptr_ce1();
    void thread_mask_address0();
    void thread_mask_address1();
    void thread_mask_ce0();
    void thread_mask_ce1();
    void thread_outptr_address0();
    void thread_outptr_ce0();
    void thread_outptr_d0();
    void thread_outptr_we0();
    void thread_p_cast_fu_540_p1();
    void thread_p_rec_fu_243_p2();
    void thread_p_s_fu_301_p3();
    void thread_sum00_fu_478_p0();
    void thread_sum00_fu_478_p00();
    void thread_sum00_fu_478_p1();
    void thread_sum00_fu_478_p2();
    void thread_sum1_cast_fu_288_p1();
    void thread_sum1_fu_283_p2();
    void thread_sum33_fu_502_p0();
    void thread_sum33_fu_502_p00();
    void thread_sum33_fu_502_p1();
    void thread_sum33_fu_502_p2();
    void thread_sum3_cast_fu_363_p1();
    void thread_sum3_fu_357_p2();
    void thread_sum5_cast_fu_386_p1();
    void thread_sum5_fu_380_p2();
    void thread_sum7_cast_fu_423_p1();
    void thread_sum7_fu_418_p2();
    void thread_sum9_cast_fu_445_p1();
    void thread_sum9_fu_440_p2();
    void thread_sum_1_fu_544_p2();
    void thread_tmp11_cast_fu_436_p1();
    void thread_tmp12_cast_fu_528_p1();
    void thread_tmp13_cast_fu_531_p1();
    void thread_tmp1_fu_368_p3();
    void thread_tmp3_fu_274_p4();
    void thread_tmp4_fu_338_p3();
    void thread_tmp5_cast_fu_353_p1();
    void thread_tmp7_cast_fu_376_p1();
    void thread_tmp7_fu_428_p3();
    void thread_tmp9_cast1_fu_411_p1();
    void thread_tmp9_cast_fu_414_p1();
    void thread_tmp_10_fu_455_p1();
    void thread_tmp_11_fu_460_p2();
    void thread_tmp_12_fu_465_p1();
    void thread_tmp_13_fu_534_p2();
    void thread_tmp_1_fu_450_p2();
    void thread_tmp_2_fu_293_p3();
    void thread_tmp_3_fu_309_p4();
    void thread_tmp_4_fu_325_p1();
    void thread_tmp_6_fu_269_p1();
    void thread_tmp_7_fu_391_p2();
    void thread_tmp_8_fu_396_p1();
    void thread_tmp_9_fu_401_p2();
    void thread_tmp_fu_345_p3();
    void thread_tmp_s_fu_406_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
