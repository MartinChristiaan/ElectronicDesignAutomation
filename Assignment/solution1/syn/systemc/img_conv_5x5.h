// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _img_conv_5x5_HH_
#define _img_conv_5x5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "img_conv_5x5_mac_bkb.h"
#include "img_conv_5x5_mac_cud.h"

namespace ap_rtl {

struct img_conv_5x5 : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > inptr_address0;
    sc_out< sc_logic > inptr_ce0;
    sc_in< sc_lv<8> > inptr_q0;
    sc_out< sc_lv<11> > inptr_address1;
    sc_out< sc_logic > inptr_ce1;
    sc_in< sc_lv<8> > inptr_q1;
    sc_out< sc_lv<6> > outptr_address0;
    sc_out< sc_logic > outptr_ce0;
    sc_out< sc_logic > outptr_we0;
    sc_out< sc_lv<8> > outptr_d0;
    sc_out< sc_lv<5> > mask_address0;
    sc_out< sc_logic > mask_ce0;
    sc_in< sc_lv<8> > mask_q0;
    sc_out< sc_lv<5> > mask_address1;
    sc_out< sc_logic > mask_ce1;
    sc_in< sc_lv<8> > mask_q1;
    sc_in< sc_lv<32> > shift;


    // Module declarations
    img_conv_5x5(sc_module_name name);
    SC_HAS_PROCESS(img_conv_5x5);

    ~img_conv_5x5();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    img_conv_5x5_mac_bkb<1,1,8,8,16,17>* img_conv_5x5_mac_bkb_U1;
    img_conv_5x5_mac_cud<1,1,8,8,17,18>* img_conv_5x5_mac_cud_U2;
    img_conv_5x5_mac_bkb<1,1,8,8,16,17>* img_conv_5x5_mac_bkb_U3;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > reg_221;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > reg_225;
    sc_signal< sc_lv<9> > IN5_0_rec_cast1_fu_229_p1;
    sc_signal< sc_lv<9> > IN5_0_rec_cast1_reg_563;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > IN5_0_rec_cast2_fu_233_p1;
    sc_signal< sc_lv<8> > IN5_0_rec_cast2_reg_568;
    sc_signal< sc_lv<7> > IN5_0_rec_cast17_cas_fu_237_p1;
    sc_signal< sc_lv<7> > IN5_0_rec_cast17_cas_reg_573;
    sc_signal< sc_lv<6> > outptr_addr_reg_578;
    sc_signal< sc_lv<6> > p_rec_fu_252_p2;
    sc_signal< sc_lv<6> > p_rec_reg_586;
    sc_signal< sc_lv<5> > i_cast1_fu_258_p1;
    sc_signal< sc_lv<5> > i_cast1_reg_591;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_cast_fu_262_p1;
    sc_signal< sc_lv<4> > i_cast_reg_597;
    sc_signal< sc_lv<3> > i_1_fu_272_p2;
    sc_signal< sc_lv<3> > i_1_reg_606;
    sc_signal< sc_lv<1> > exitcond_fu_266_p2;
    sc_signal< sc_lv<7> > sum3_fu_306_p2;
    sc_signal< sc_lv<7> > sum3_reg_616;
    sc_signal< sc_lv<8> > sum5_fu_319_p2;
    sc_signal< sc_lv<8> > sum5_reg_622;
    sc_signal< sc_lv<9> > sum9_fu_332_p2;
    sc_signal< sc_lv<9> > sum9_reg_627;
    sc_signal< sc_lv<1> > icmp_fu_376_p2;
    sc_signal< sc_lv<1> > icmp_reg_637;
    sc_signal< sc_lv<8> > tmp_13_fu_382_p1;
    sc_signal< sc_lv<8> > tmp_13_reg_642;
    sc_signal< sc_lv<8> > inptr_load_1_reg_667;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > inptr_load_2_reg_672;
    sc_signal< sc_lv<8> > mask_load_1_reg_687;
    sc_signal< sc_lv<8> > mask_load_2_reg_692;
    sc_signal< sc_lv<16> > sum33_fu_478_p2;
    sc_signal< sc_lv<16> > sum33_reg_707;
    sc_signal< sc_lv<17> > grp_fu_533_p3;
    sc_signal< sc_lv<17> > tmp7_reg_712;
    sc_signal< sc_lv<18> > grp_fu_541_p3;
    sc_signal< sc_lv<18> > tmp8_reg_717;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<21> > sum_2_fu_520_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > IN5_0_rec_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<21> > sum_reg_198;
    sc_signal< sc_lv<1> > exitcond2_fu_246_p2;
    sc_signal< sc_lv<3> > i_reg_210;
    sc_signal< sc_lv<64> > IN5_0_rec_cast_fu_241_p1;
    sc_signal< sc_lv<64> > sum1_cast_fu_293_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_278_p1;
    sc_signal< sc_lv<64> > sum3_cast_fu_386_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_390_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_399_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_409_p1;
    sc_signal< sc_lv<64> > sum7_cast_fu_417_p1;
    sc_signal< sc_lv<64> > sum9_cast_fu_422_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_431_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_441_p1;
    sc_signal< sc_lv<6> > tmp_4_cast_fu_283_p1;
    sc_signal< sc_lv<6> > sum1_fu_287_p2;
    sc_signal< sc_lv<7> > tmp1_fu_298_p3;
    sc_signal< sc_lv<8> > tmp2_fu_311_p3;
    sc_signal< sc_lv<9> > tmp4_fu_324_p3;
    sc_signal< sc_lv<32> > sum_cast_fu_337_p1;
    sc_signal< sc_lv<32> > sum_1_fu_341_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_350_p3;
    sc_signal< sc_lv<21> > tmp_fu_346_p1;
    sc_signal< sc_lv<21> > p_s_fu_358_p3;
    sc_signal< sc_lv<13> > tmp_2_fu_366_p4;
    sc_signal< sc_lv<4> > tmp_5_fu_394_p2;
    sc_signal< sc_lv<4> > tmp_7_fu_404_p2;
    sc_signal< sc_lv<8> > sum7_cast1_fu_414_p1;
    sc_signal< sc_lv<5> > tmp_9_fu_426_p2;
    sc_signal< sc_lv<5> > tmp_10_fu_436_p2;
    sc_signal< sc_lv<8> > sum00_fu_454_p0;
    sc_signal< sc_lv<8> > sum00_fu_454_p1;
    sc_signal< sc_lv<16> > sum00_fu_454_p2;
    sc_signal< sc_lv<8> > sum33_fu_478_p0;
    sc_signal< sc_lv<8> > sum33_fu_478_p1;
    sc_signal< sc_lv<17> > grp_fu_549_p3;
    sc_signal< sc_lv<19> > tmp8_cast_fu_507_p1;
    sc_signal< sc_lv<19> > tmp7_cast_fu_504_p1;
    sc_signal< sc_lv<19> > tmp_12_fu_510_p2;
    sc_signal< sc_lv<21> > p_cast_fu_516_p1;
    sc_signal< sc_lv<8> > grp_fu_533_p0;
    sc_signal< sc_lv<8> > grp_fu_541_p0;
    sc_signal< sc_lv<8> > grp_fu_549_p0;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_533_p00;
    sc_signal< sc_lv<16> > grp_fu_541_p00;
    sc_signal< sc_lv<16> > grp_fu_549_p00;
    sc_signal< sc_lv<16> > sum00_fu_454_p00;
    sc_signal< sc_lv<16> > sum33_fu_478_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_3B;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<8> ap_const_lv8_FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN5_0_rec_cast17_cas_fu_237_p1();
    void thread_IN5_0_rec_cast1_fu_229_p1();
    void thread_IN5_0_rec_cast2_fu_233_p1();
    void thread_IN5_0_rec_cast_fu_241_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_246_p2();
    void thread_exitcond_fu_266_p2();
    void thread_grp_fu_533_p0();
    void thread_grp_fu_533_p00();
    void thread_grp_fu_541_p0();
    void thread_grp_fu_541_p00();
    void thread_grp_fu_549_p0();
    void thread_grp_fu_549_p00();
    void thread_i_1_fu_272_p2();
    void thread_i_cast1_fu_258_p1();
    void thread_i_cast_fu_262_p1();
    void thread_icmp_fu_376_p2();
    void thread_inptr_address0();
    void thread_inptr_address1();
    void thread_inptr_ce0();
    void thread_inptr_ce1();
    void thread_mask_address0();
    void thread_mask_address1();
    void thread_mask_ce0();
    void thread_mask_ce1();
    void thread_outptr_address0();
    void thread_outptr_ce0();
    void thread_outptr_d0();
    void thread_outptr_we0();
    void thread_p_cast_fu_516_p1();
    void thread_p_rec_fu_252_p2();
    void thread_p_s_fu_358_p3();
    void thread_sum00_fu_454_p0();
    void thread_sum00_fu_454_p00();
    void thread_sum00_fu_454_p1();
    void thread_sum00_fu_454_p2();
    void thread_sum1_cast_fu_293_p1();
    void thread_sum1_fu_287_p2();
    void thread_sum33_fu_478_p0();
    void thread_sum33_fu_478_p00();
    void thread_sum33_fu_478_p1();
    void thread_sum33_fu_478_p2();
    void thread_sum3_cast_fu_386_p1();
    void thread_sum3_fu_306_p2();
    void thread_sum5_cast_fu_390_p1();
    void thread_sum5_fu_319_p2();
    void thread_sum7_cast1_fu_414_p1();
    void thread_sum7_cast_fu_417_p1();
    void thread_sum9_cast_fu_422_p1();
    void thread_sum9_fu_332_p2();
    void thread_sum_1_fu_341_p2();
    void thread_sum_2_fu_520_p2();
    void thread_sum_cast_fu_337_p1();
    void thread_tmp1_fu_298_p3();
    void thread_tmp2_fu_311_p3();
    void thread_tmp4_fu_324_p3();
    void thread_tmp7_cast_fu_504_p1();
    void thread_tmp8_cast_fu_507_p1();
    void thread_tmp_10_fu_436_p2();
    void thread_tmp_11_fu_441_p1();
    void thread_tmp_12_fu_510_p2();
    void thread_tmp_13_fu_382_p1();
    void thread_tmp_1_fu_350_p3();
    void thread_tmp_2_fu_366_p4();
    void thread_tmp_4_cast_fu_283_p1();
    void thread_tmp_4_fu_278_p1();
    void thread_tmp_5_fu_394_p2();
    void thread_tmp_6_fu_399_p1();
    void thread_tmp_7_fu_404_p2();
    void thread_tmp_8_fu_409_p1();
    void thread_tmp_9_fu_426_p2();
    void thread_tmp_fu_346_p1();
    void thread_tmp_s_fu_431_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
